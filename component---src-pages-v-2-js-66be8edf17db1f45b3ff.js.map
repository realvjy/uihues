{"version":3,"sources":["webpack:///./src/pages/v2.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/data/uihues-data.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_data_uihues_data__WEBPACK_IMPORTED_MODULE_4__","SecondPage","a","createElement","title","to","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Header","siteTitle","react_default","className","gatsby_browser_entry","Layout","children","_856328897","Fragment","header","href","UIHues","_public_static_d_3733380364_json__WEBPACK_IMPORTED_MODULE_0__","hueNum","allUihuesPosts","nodes","map","huenode","color_data","feed","entry","i","length","new_hues","number","_t","hues_palette","created_date","push","gatsby__WEBPACK_IMPORTED_MODULE_2__","reverse","key","hues","huesvalue","date","hue_hex","style","backgroundColor","colorhex"],"mappings":"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","file":"component---src-pages-v-2-js-66be8edf17db1f45b3ff.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport UihuesData from '../data/uihues-data'\n\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO title=\"Page two\" />\n    <UihuesData/>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default SecondPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"content-wrap\">\n    <div>\n      <h1>\n        <Link to=\"/\">\n          {siteTitle}\n        </Link>\n      </h1>\n      <p>\n      A Collection of handcrafted colors and gradients\n      </p>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.scss\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  \n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <section>\n        <main className=\"content-wrap\">\n          {children}\n        </main>\n      </section>\n      <footer>\n        <div className=\"content-wrap\">\n        designing and devloping by\n          {` `}\n          <a href=\"https://vijayverma.co\">realvjy</a>\n        </div>\n      </footer>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nconst UIHues = () => {\n    const data = useStaticQuery(graphql`\n    query UIHuesDataQuery {\n        allUihuesPosts(skip: 1) {\n                nodes {\n                    feed {\n                        entry {\n                            content {\n                                _t\n                                type\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const hueNum = []\n    // const uniqueHues = [];\n    // {\n    //     \"number\": \"Omolon\",\n    //     \"hues_palette\": [\"#091E3A\", \"#2F80ED\", \"#2D9EE0\"],\n    //     \"created_date\": \"8-9-1990\"\n    // },\n\n    return (\n        <>\n            {data.allUihuesPosts.nodes.map(huenode => {\n                let color_data = huenode.feed.entry\n                for (let i = 6; i < color_data.length; i+=6) {\n                    let number = color_data[i].content._t\n                    let hues_palette = [color_data[i+1].content._t, color_data[i+2].content._t, color_data[i+3].content._t, color_data[i+4].content._t]\n                    let created_date = color_data[i+5].content._t\n                    let new_hues = {\"number\" : number, \"hues_palette\": hues_palette, \"created_date\": created_date}\n                    hueNum.push(new_hues)\n                }\n                \n            })}\n\n            <div className=\"uihues-nav\">\n                <ul>\n                    <li><Link to=\"//\">All</Link></li>\n                    <li><Link to=\"/\">Colors</Link></li>\n                    <li><Link to=\"/\">Gradients</Link></li>\n                </ul>\n            </div>\n            <div className=\"uihues-container\">\n            {hueNum.reverse().map((color_data, i) => (\n               <div className=\"color-wrap\" key={i}>\n               <div className=\"color-box\" hues={`#`+color_data.number} key={i}>\n                   <h3>#{color_data.number}</h3>\n                   <h4>add</h4>\n                   <ul huesvalue={color_data.hues_palette} date={color_data.created_date}>\n                    {/* Extracting Color Hex */}\n                    {color_data.hues_palette.map((hue_hex, n) =>(\n                        <li className=\"hues\" key={n} style={{backgroundColor:hue_hex}} colorhex={hue_hex}><a href=\"#\">{hue_hex}</a></li>\n                    ))}\n                    </ul>\n                   \n                   \n               </div>  \n               </div>\n            ))}\n            </div>\n        </>\n    )\n\n}\n\nexport default UIHues"],"sourceRoot":""}