{"version":3,"sources":["webpack:///./src/data/uihues-grd-data.js","webpack:///./src/pages/gradient.js"],"names":["UIHuesGrd","data","hueNum","allUihuesGradients","nodes","map","huenode","color_data","feed","entry","i","length","new_hues","content","_t","push","className","to","reverse","key","hues","number","animation","size","placement","delay","href","text","angle","hue_hex1","hue_hex2","date","created_date","style","background","trigger","duration","onShow","instance","setTimeout","hide","SecondPage","title"],"mappings":"8MA+GeA,EArGG,WACd,IAAMC,EAAI,OAiBJC,EAAS,GAUf,OACI,oCACKD,EAAKE,mBAAmBC,MAAMC,IAAI,SAAAC,GAE/B,IADA,IAAIC,EAAaD,EAAQE,KAAKC,MACrBC,EAAI,EAAGA,EAAIH,EAAWI,OAAQD,GAAG,EAAG,CACzC,IAMIE,EAAW,CAAC,OANHL,EAAWG,GAAGG,QAAQC,GAMA,SALpBP,EAAWG,EAAE,GAAGG,QAAQC,GAKmB,SAJ3CP,EAAWG,EAAE,GAAGG,QAAQC,GAI0C,SAHlEP,EAAWG,EAAE,GAAGG,QAAQC,GAGiE,MAF5FP,EAAWG,EAAE,GAAGG,QAAQC,GAEmF,aADpGP,EAAWG,EAAE,GAAGG,QAAQC,IAE3CZ,EAAOa,KAAKH,MAInB,yBAAKI,UAAU,cACZ,4BACI,4BAAI,kBAAC,IAAD,CAAMC,GAAG,KAAT,WACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAYD,UAAU,UAA/B,gBAIZ,yBAAKA,UAAU,oBACdd,EAAOgB,UAAUb,IAAI,SAACE,EAAYG,GAAb,OACnB,yBAAKM,UAAU,aAAaG,IAAKT,GACjC,yBAAKM,UAAU,YAAYI,KAAM,IAAIb,EAAWc,OAAQF,IAAKT,GACzD,yBAAKM,UAAU,YACX,wBAAIA,UAAU,WAAd,IAA0BT,EAAWc,QACrC,wBAAIL,UAAU,WACV,4BACC,kBAAC,IAAD,CAAOH,QAAQ,gBACXS,UAAU,aACVC,KAAK,QACLC,UAAU,WACVC,MAAO,CAAC,IAAK,IAEjB,uBAAGC,KAAK,KAAI,kBAAC,IAAD,WAKpB,kBAAC,kBAAD,CAAiBC,KAAI,+BAAiCpB,EAAWqB,MAA5C,QAAyDrB,EAAWsB,SAApE,QAAoFtB,EAAWuB,SAA/F,UAAkHX,IAAKT,GAC5I,wBAAIqB,KAAMxB,EAAWyB,aAAchB,UAAU,aACrC,wBAAIA,UAAU,gBAAgBiB,MAAO,CAACC,WAAW,mBAAmB3B,EAAWqB,MAA/B,QAA4CrB,EAAWsB,SAAvD,KAAoEtB,EAAWuB,SAA/E,MAChD,yBAAKd,UAAU,cAAcG,IAAKT,GACtB,kBAAC,IAAD,CAAMS,IAAKT,IADvB,IAC6B,0BAAMM,UAAU,QAAhB,aAE7B,kBAAC,IAAD,CAAOH,QAAQ,SACPS,UAAU,OACVC,KAAK,QACLC,UAAU,SACVW,QAAQ,QACRC,SAAU,IACVX,MAAM,KACNY,OAAQ,SAAAC,GAAQ,OAAKC,WAAW,WAC5BD,EAASE,QACV,OAEP,0BAAMxB,UAAU,SAASG,IAAKT,GAAIH,EAAWsB,SAA7C,IAAwDtB,EAAWuB,SAAnE,IAA8EvB,EAAWqB,MAAzF,gBClFjBa,UAPI,kBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,aACX,kBAAC,EAAD,S","file":"component---src-pages-gradient-js-ca79997f9574998a58d6.js","sourcesContent":["import React from 'react'\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\nimport Copy from \"../images/copy.svg\"\nimport Dwn from \"../images/download.svg\"\nimport Tippy from '@tippy.js/react'\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\n\n\nconst UIHuesGrd = () => {\n    const data = useStaticQuery(graphql`\n    query UIHuesGrdDataQuery {\n        allUihuesGradients{\n            nodes {\n            feed {\n                entry {\n                content {\n                    type\n                    _t\n                }\n                }\n            }\n            }\n        }\n        }\n    `)\n    \n    const hueNum = []\n    // const uniqueHues = [];\n    // {\n    //     \"number\": \"huenum\",\n    //     \"hues_palette\": [\"#091E3A\", \"#2F80ED\", \"#2D9EE0\"],\n    //     \"created_date\": \"8-9-1990\"\n    // },\n \n    \n\n    return (\n        <>\n            {data.allUihuesGradients.nodes.map(huenode => {\n                let color_data = huenode.feed.entry\n                for (let i = 6; i < color_data.length; i+=6) {\n                    let number = color_data[i].content._t\n                    let hue_hex1 = color_data[i+1].content._t \n                    let hue_hex2 = color_data[i+2].content._t \n                    let hue_hex3 = color_data[i+3].content._t\n                    let angle = color_data[i+4].content._t\n                    let created_date = color_data[i+5].content._t\n                    let new_hues = {\"number\" : number, \"hue_hex1\" : hue_hex1, \"hue_hex2\" : hue_hex2, \"hue_hex3\" : hue_hex3, \"angle\": angle,\"created_date\": created_date}\n                    hueNum.push(new_hues)\n                }\n                \n            })}\n             <div className=\"uihues-nav\">\n                <ul>\n                    <li><Link to=\"/\">Colors</Link></li>\n                    <li><Link to=\"/gradient\" className=\"active\">Gradients</Link></li>\n                </ul>\n            </div>\n            \n            <div className=\"uihues-container\">\n            {hueNum.reverse().map((color_data, i) => (\n               <div className=\"color-wrap\" key={i}>\n               <div className=\"color-box\" hues={`#`+color_data.number} key={i}>\n                   <div className=\"hue-meta\">\n                       <h3 className=\"hue-num\">#{color_data.number}</h3>\n                       <ul className=\"hue-atn\">\n                           <li>\n                            <Tippy content=\"coming soon..\"\n                                animation=\"shift-away\"\n                                size=\"small\"\n                                placement=\"left-end\"\n                                delay={[100, 0]}\n                            >\n                            <a href=\"#\"><Dwn /></a>\n                            </Tippy>\n                           </li>\n                       </ul>\n                    </div>\n                    <CopyToClipboard text={`background: linear-gradient(${color_data.angle}deg, ${color_data.hue_hex1} 0%, ${color_data.hue_hex2} 100%);`} key={i}>\n                    <ul date={color_data.created_date} className=\"color-hex\">\n                            <li className=\"hues gradient\" style={{background:`linear-gradient(${color_data.angle}deg, ${color_data.hue_hex1}, ${color_data.hue_hex2})`}}>\n                            <div className=\"copyic_wrap\" key={i}>\n                                        <Copy key={i} /> <span className=\"csss\">Copy CSS</span>\n                            </div>\n                            <Tippy content=\"Copied\"\n                                    animation=\"fade\"\n                                    size=\"small\"\n                                    placement=\"bottom\"\n                                    trigger=\"click\"\n                                    duration= \"0\"\n                                    delay=\"10\"\n                                    onShow={instance => (setTimeout(() => {\n                                        instance.hide()\n                                    }, 600))}\n                                >\n                                <span className=\"grdhex\" key={i}>{color_data.hue_hex1} {color_data.hue_hex2} {color_data.angle}Â°</span>\n                                </Tippy>\n                            </li>\n                        </ul>\n                    </CopyToClipboard>\n               </div>  \n               </div>\n            ))}\n            </div>\n        </>\n    )\n\n}\n\nexport default UIHuesGrd","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport UihuesGrdData from '../data/uihues-grd-data'\n\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO title=\"Page two\" />\n    <UihuesGrdData/>\n  </Layout>\n)\n\nexport default SecondPage\n"],"sourceRoot":""}